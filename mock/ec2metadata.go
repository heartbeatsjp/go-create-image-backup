// Code generated by MockGen. DO NOT EDIT.
// Source: aws.go

// Package mock_main is a generated GoMock package.
package mock

import (
	reflect "reflect"

	ec2metadata "github.com/aws/aws-sdk-go/aws/ec2metadata"
	gomock "github.com/golang/mock/gomock"
)

// MockEC2MetadataAPI is a mock of EC2MetadataAPI interface
type MockEC2MetadataAPI struct {
	ctrl     *gomock.Controller
	recorder *MockEC2MetadataAPIMockRecorder
}

// MockEC2MetadataAPIMockRecorder is the mock recorder for MockEC2MetadataAPI
type MockEC2MetadataAPIMockRecorder struct {
	mock *MockEC2MetadataAPI
}

// NewMockEC2MetadataAPI creates a new mock instance
func NewMockEC2MetadataAPI(ctrl *gomock.Controller) *MockEC2MetadataAPI {
	mock := &MockEC2MetadataAPI{ctrl: ctrl}
	mock.recorder = &MockEC2MetadataAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEC2MetadataAPI) EXPECT() *MockEC2MetadataAPIMockRecorder {
	return m.recorder
}

// Available mocks base method
func (m *MockEC2MetadataAPI) Available() bool {
	ret := m.ctrl.Call(m, "Available")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Available indicates an expected call of Available
func (mr *MockEC2MetadataAPIMockRecorder) Available() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Available", reflect.TypeOf((*MockEC2MetadataAPI)(nil).Available))
}

// GetInstanceIdentityDocument mocks base method
func (m *MockEC2MetadataAPI) GetInstanceIdentityDocument() (ec2metadata.EC2InstanceIdentityDocument, error) {
	ret := m.ctrl.Call(m, "GetInstanceIdentityDocument")
	ret0, _ := ret[0].(ec2metadata.EC2InstanceIdentityDocument)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstanceIdentityDocument indicates an expected call of GetInstanceIdentityDocument
func (mr *MockEC2MetadataAPIMockRecorder) GetInstanceIdentityDocument() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceIdentityDocument", reflect.TypeOf((*MockEC2MetadataAPI)(nil).GetInstanceIdentityDocument))
}

// Region mocks base method
func (m *MockEC2MetadataAPI) Region() (string, error) {
	ret := m.ctrl.Call(m, "Region")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Region indicates an expected call of Region
func (mr *MockEC2MetadataAPIMockRecorder) Region() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Region", reflect.TypeOf((*MockEC2MetadataAPI)(nil).Region))
}
